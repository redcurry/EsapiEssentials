<Window
    x:Class="EsapiEssentials.PluginRunner.MainWindow"
    x:ClassModifier="internal"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:cm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
    xmlns:pr="clr-namespace:EsapiEssentials.PluginRunner"
    Title="ESAPI Essentials Plugin Runner"
    Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
    WindowStartupLocation="CenterScreen"
    Width="640" Height="640"
    >

    <Window.Resources>
        <!-- Sorted and grouped plans and plan sums -->
        <CollectionViewSource x:Key="PlansAndPlanSums" Source="{Binding PlansAndPlanSums}">
            <CollectionViewSource.SortDescriptions>
                <cm:SortDescription PropertyName="Id" />
            </CollectionViewSource.SortDescriptions>
            <CollectionViewSource.GroupDescriptions>
                <PropertyGroupDescription PropertyName="CourseId" />
            </CollectionViewSource.GroupDescriptions>
        </CollectionViewSource>

        <!-- View for course group headings -->
        <DataTemplate x:Key="CourseHeaderTemplate">
            <TextBlock
                Text="{Binding Name, StringFormat=Course: \{0\}}"
                FontWeight="Bold"
                Opacity="0.6"
                />
        </DataTemplate>

        <!-- Style for course group container -->
        <Style x:Key="CourseContainerStyle" TargetType="GroupItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="GroupItem">
                        <StackPanel>
                            <ContentPresenter Margin="5,5,0,0" />
                            <ItemsPresenter Margin="5,3,5,0"/>
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <BooleanToVisibilityConverter x:Key="VisibilityConverter" />
    </Window.Resources>

    <Grid
        Margin="10"
        >
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />  <!-- Patient search box -->
            <RowDefinition Height="*"    />  <!-- Patient and plan list boxes-->
            <RowDefinition Height="Auto" />  <!-- Run and exit buttons -->
        </Grid.RowDefinitions>

        <!-- Patient search box -->
        <StackPanel
            Grid.Row="0"
            Orientation="Horizontal"
            >
            <TextBlock
                Text="Search patient:"
                VerticalAlignment="Center"
                />
            <TextBox
                Name="SearchTextBox"
                Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True}"
                Width="150"
                Margin="5,0,0,0"
                >
                <!-- Call the SearchPatientCommand when the SearchText is updated in the view model -->
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SourceUpdated">
                        <i:InvokeCommandAction Command="{Binding SearchPatientCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBox>
        </StackPanel>

        <!-- Patient and plan list boxes -->
        <UniformGrid
            Grid.Row="1"
            Columns="2"
            Margin="0,10,0,0"
            >
            <!-- Patient matches -->
            <ListBox
                ItemsSource="{Binding PatientMatches}"
                SelectedItem="{Binding SelectedPatientMatch, NotifyOnSourceUpdated=True}"
                >
                <!-- Call the OpenPatientCommand when the SelectedItem is updated in the view model -->
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SourceUpdated">
                        <i:InvokeCommandAction Command="{Binding OpenPatientCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock>
                            <Run Text="{Binding LastName}" />, <Run Text="{Binding FirstName}" /> (<Run Text="{Binding Id}" />)
                        </TextBlock>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>

            <!-- Plans and plan sums for the selected patient -->
            <ListBox
                ItemsSource="{Binding Source={StaticResource PlansAndPlanSums}}"
                SelectionChanged="PlansAndPlanSums_OnSelectionChanged"
                >
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <DockPanel>
                            <CheckBox
                                Content="{Binding Id}"
                                IsChecked="{Binding IsInScope}"
                                >
                                <CheckBox.Style>
                                    <Style TargetType="CheckBox">
                                        <Setter Property="FontWeight" Value="Normal" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Type}" Value="{x:Static pr:PlanType.PlanSum}">
                                                <Setter Property="FontWeight" Value="Bold" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </CheckBox.Style>
                            </CheckBox>
                            <RadioButton
                                IsChecked="{Binding IsActive}"
                                GroupName="Active"
                                HorizontalAlignment="Right"
                                Visibility="{Binding CanBeActive, Converter={StaticResource VisibilityConverter}}"
                                />
                        </DockPanel>
                    </DataTemplate>
                </ListBox.ItemTemplate>
                <ListBox.GroupStyle>
                    <GroupStyle
                        HeaderTemplate="{StaticResource CourseHeaderTemplate}"
                        ContainerStyle="{StaticResource CourseContainerStyle}"
                        />
                </ListBox.GroupStyle>
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    </Style>
                </ListBox.ItemContainerStyle>
            </ListBox>
        </UniformGrid>

        <!-- Run and exit buttons -->
        <StackPanel
            Grid.Row="2"
            Orientation="Horizontal"
            HorizontalAlignment="Right"
            Margin="0,10,0,0"
            >
            <Button
                Content="Run"
                Command="{Binding RunCommand}"
                />
        </StackPanel>
    </Grid>
</Window>
